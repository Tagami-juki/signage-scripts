name: Capture Kids Yahoo Today

on:
  workflow_dispatch:
  schedule:
    - cron: "15 * * * *"   # 1時間ごと（毎時 15分）

permissions:
  contents: write

jobs:
  capture:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4
        with:
          fetch-depth: 1

      # 日本語フォント（Noto Sans/Serif CJK）を入れて文字化けを防止
      - name: Install Japanese fonts
        run: |
          sudo apt-get update
          sudo apt-get install -y fonts-noto-cjk fonts-ipafont-gothic fonts-ipafont-mincho

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20.x"

      # puppeteer（Chromium 同梱）を入れるための最小 npm 環境
      - name: Init minimal project and install puppeteer
        run: |
          npm init -y
          npm install puppeteer@22

      - name: Ensure output dirs
        run: |
          mkdir -p shots scripts

      # ====== ここで puppeteer スクリプトを Python で書き出す（YAML安全版） ======
      - name: Generate capture script
        shell: bash
        run: |
          python3 - <<'PY'
          import os, textwrap
          os.makedirs("scripts", exist_ok=True)
          content = r"""// Kids Yahoo! '今日は何の日' capture (no $x)
import fs from "node:fs";
import puppeteer from "puppeteer";

const URL = "https://kids.yahoo.co.jp/today";
const OUT = "shots/kids-today.png";
const VIEWPORT = { width: 1920, height: 1080 };

// 詳細カードを優先して狙う候補セレクタ
const CANDIDATES = [
  '#__next > div > main > div[class^="Today_info__"]',
  'main div[class^="Today_info__"]',
  'main [class^="Today_info__"]',
  'main section'
];

function ensureDirFor(p){
  const d = p.split("/").slice(0,-1).join("/");
  if (d && !fs.existsSync(d)) fs.mkdirSync(d, { recursive: true });
}

async function shootBySelectors(page, selectors, outPath){
  for (const sel of selectors){
    const el = await page.$(sel);
    if (el){
      await el.screenshot({ path: outPath });
      console.log("Captured by selector:", sel);
      return true;
    }
  }
  return false;
}

(async()=>{
  ensureDirFor(OUT);
  const browser = await puppeteer.launch({
    headless: "new",
    args: ["--no-sandbox","--disable-setuid-sandbox","--lang=ja-JP,ja"],
    defaultViewport: VIEWPORT
  });
  try{
    const page = await browser.newPage();
    await page.setExtraHTTPHeaders({"Accept-Language":"ja-JP,ja;q=0.9"});
    await page.setUserAgent("Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/126.0.0.0 Safari/537.36");

    await page.goto(URL, { waitUntil: "networkidle2", timeout: 120000 });
    await page.waitForSelector("main", { timeout: 8000 }).catch(()=>{});

    // 1) 詳細カードのセレクタを順に試す
    let ok = await shootBySelectors(page, CANDIDATES, OUT);

    // 2) ダメなら main 要素
    if (!ok) {
      const m = await page.$("main");
      if (m) {
        await m.screenshot({ path: OUT });
        console.log("Captured by selector: main");
        ok = true;
      }
    }
    // 3) 最終手段：フルページ
    if (!ok) {
      await page.screenshot({ path: OUT, fullPage: true });
      console.warn("Fallback to full-page capture.");
    }
    console.log("Saved:", OUT);
  } catch(e){
    console.error("Capture failed:", e);
    process.exitCode = 1;
  } finally {
    await browser.close();
  }
})();
"""
          open("scripts/capture-kids.mjs", "w", encoding="utf-8").write(content)
          PY

      - name: Run capture script
        run: |
          node scripts/capture-kids.mjs

      # 変更がある時だけコミット＆プッシュ（pull/rebase は行わないので競合を避けやすい）
      - name: Commit & Push outputs (and script if updated)
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          set -e
          git config user.name  "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"

          git add -A
          if git diff --cached --quiet; then
            echo "No changes to commit."
          else
            git commit -m "Update kids-today capture (and script if changed)"
            git push origin HEAD:main
          fi
