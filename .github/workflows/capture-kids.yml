name: Capture Kids Yahoo Today

on:
  workflow_dispatch:
  schedule:
    - cron: '5 21 * * *'   # JST 06:05

permissions:
  contents: write

jobs:
  capture:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install Japanese fonts
        run: |
          sudo apt-get update
          sudo apt-get install -y fonts-noto fonts-noto-cjk

      - name: Init minimal project & install puppeteer
        run: |
          test -f package.json || echo '{}' > package.json
          npm pkg set type="module"
          npm i puppeteer@22

      - name: Ensure output dir
        run: mkdir -p shots scripts

      # ===== スクリプト自動生成（Python）: mainフォールバック無し =====
      - name: Generate capture script (NO MAIN FALLBACK)
        run: |
          python3 - <<'PY'
          import os, textwrap, pathlib
          pathlib.Path("scripts").mkdir(parents=True, exist_ok=True)
          js = textwrap.dedent(r"""
            // SIGNATURE: kids-today v3 NO_MAIN_FALLBACK
            import fs from "node:fs";
            import puppeteer from "puppeteer";

            const URL  = "https://kids.yahoo.co.jp/today";
            const OUT  = "shots/kids-today.png";
            const VIEW = { width: 1920, height: 1080 };

            const CANDIDATES = [
              '#__next > div > main > div[class^="Today_info__"]',
              '#__next main div[class^="Today_info__"]',
              '#__next main div[class*="Today_info__"]',
              '#__next main section[class^="Today_info__"]',
              '#__next main section[class*="Today_info__"]',
            ];

            function ensureDirFor(p){
              const d = p.split("/").slice(0,-1).join("/");
              if (d && !fs.existsSync(d)) fs.mkdirSync(d, { recursive: true });
            }

            async function waitAndPick(page){
              await page.waitForSelector("main", { timeout: 15000 }).catch(()=>{});
              for (const sel of CANDIDATES){
                try{
                  await page.waitForSelector(sel, { timeout: 4000 });
                  const el = await page.$(sel);
                  if (el) return { el, sel };
                }catch{}
              }
              return { el:null, sel:null };
            }

            (async ()=>{
              console.log("SCRIPT_SIGNATURE: kids-today v3 NO_MAIN_FALLBACK");
              ensureDirFor(OUT);

              const browser = await puppeteer.launch({
                headless: "new",
                args: ["--no-sandbox", "--disable-setuid-sandbox", "--lang=ja-JP,ja"],
                defaultViewport: VIEW,
              });

              try{
                const page = await browser.newPage();
                await page.setExtraHTTPHeaders({ "Accept-Language": "ja-JP,ja;q=0.9" });
                await page.setUserAgent(
                  "Mozilla/5.0 (Windows NT 10.0; Win64; x64) " +
                  "AppleWebKit/537.36 (KHTML, like Gecko) " +
                  "Chrome/126.0.0.0 Safari/537.36"
                );

                // 軽量化（不要なら削除）
                await page.setRequestInterception(true);
                page.on("request", req => {
                  const t = req.resourceType();
                  if (t === "image" || t === "font" || t === "media") req.abort();
                  else req.continue();
                });

                await page.goto(URL, { waitUntil: "networkidle2", timeout: 120000 });

                const { el, sel } = await waitAndPick(page);
                if (!el){
                  console.error("Target selector not found. (NO fallback to 'main')");
                  process.exitCode = 2;
                  return;
                }
                await el.screenshot({ path: OUT });
                console.log("Captured by selector:", sel);
                console.log("Saved:", OUT);
              }catch(e){
                console.error("Capture failed:", e);
                process.exitCode = 1;
              }finally{
                await browser.close();
              }
            })();
          """).strip()+"\n"
          open("scripts/capture-kids.mjs", "w", encoding="utf-8").write(js)
          print("=== head of scripts/capture-kids.mjs ===")
          print("\n".join(js.splitlines()[:40]))
          PY

      - name: Guard: script must NOT contain 'Captured by selector: main'
        run: |
          if grep -nE "Captured by selector:\s*main" -R scripts/capture-kids.mjs; then
            echo "::error ::Forbidden 'main' fallback found in script"
            exit 1
          fi

      - name: Run capture script
        run: node scripts/capture-kids.mjs

      - name: Commit & Push outputs (if changed)
        run: |
          set -e
          git config user.name  "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git add shots/kids-today.png
          if git diff --cached --quiet; then
            echo "No changes to commit."
            exit 0
          fi
          git pull --rebase origin "${GITHUB_REF_NAME}"
          git commit -m "Update kids-today capture [skip ci]"
          git push
