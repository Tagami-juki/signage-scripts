name: Capture Kids Yahoo Today

on:
  workflow_dispatch: {}
  schedule:
    # 適宜調整。毎日 06:15 JST (= 21:15 UTC) に実行
    - cron: "15 21 * * *"

jobs:
  capture:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      # 日本語フォント（IPAex）を入れておくと文字が化けにくいです
      - name: Install Japanese fonts
        run: |
          sudo apt-get update
          sudo apt-get install -y fonts-ipaexfont

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"

      - name: Install dependencies (puppeteer)
        run: |
          npm init -y
          npm install puppeteer

      - name: Ensure output dir
        run: mkdir -p shots

      # ====== スクリプト自動生成（ここがポイント）======
      - name: Generate capture script (mjs)
        run: |
          mkdir -p scripts
          cat > scripts/capture-kids.mjs <<'EOF'
          // Kids Yahoo!「今日は何の日」要素のみキャプチャ（Puppeteer）
          import fs from "node:fs";
          import puppeteer from "puppeteer";

          const URL  = "https://kids.yahoo.co.jp/today";
          const OUT  = "shots/kids-today.png";
          const VIEW = { width: 1920, height: 1080 };

          // キャプチャ対象のセレクタ（BEMでClass名にサフィックスが付くので前方一致）
          const SEL  = '#__next > div > main > div[class^="Today_info__"]';

          function ensureDirFor(p) {
            const d = p.split("/").slice(0, -1).join("/");
            if (d && !fs.existsSync(d)) fs.mkdirSync(d, { recursive: true });
          }

          (async () => {
            ensureDirFor(OUT);

            const browser = await puppeteer.launch({
              headless: "new",
              args: ["--no-sandbox", "--disable-setuid-sandbox", "--lang=ja-JP,ja"],
              defaultViewport: VIEW,
            });

            try {
              const page = await browser.newPage();
              await page.setExtraHTTPHeaders({ "Accept-Language": "ja-JP,ja;q=0.9" });
              await page.setUserAgent(
                "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 " +
                "(KHTML, like Gecko) Chrome/126.0.0.0 Safari/537.36"
              );

              await page.goto(URL, { waitUntil: "networkidle2", timeout: 120000 });

              // 対象要素が表示されるまで待機
              await page.waitForSelector(SEL, { timeout: 15000 });

              const el = await page.$(SEL);
              if (el) {
                await el.screenshot({ path: OUT });
                console.log("Captured by selector:", SEL);
              } else {
                console.warn("Target not found. Fallback to full page.");
                await page.screenshot({ path: OUT, fullPage: true });
              }

              console.log("Saved:", OUT);
            } catch (e) {
              console.error("Capture failed:", e);
              process.exitCode = 1;
            } finally {
              await browser.close();
            }
          })();
          EOF

      - name: Run capture script
        run: node scripts/capture-kids.mjs

      # ====== 競合回避＆Push（生成物を優先）======
      - name: Commit & Push outputs
        run: |
          set -e
          git config user.name  "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"

          git add -A
          if git diff --cached --quiet; then
            echo "No changes to commit."
            exit 0
          fi

          git commit -m "Update kids-today capture [skip ci]"

          # rebase ではなく merge、競合時は今回生成物(ours)を採用
          git fetch origin main
          git merge -X ours --no-edit origin/main || true
          git push origin HEAD:main
