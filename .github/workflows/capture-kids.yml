name: Capture Kids Yahoo Today

on:
  workflow_dispatch:
  schedule:
    - cron: "15 * * * *"  # 毎時15分に実行

permissions:
  contents: write

jobs:
  capture:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4
        with:
          fetch-depth: 1

      # 日本語フォント（文字化け防止）
      - name: Install Japanese fonts
        run: |
          sudo apt-get update
          sudo apt-get install -y fonts-noto-cjk fonts-ipafont-gothic fonts-ipafont-mincho

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20.x"

      # puppeteer を入れる
      - name: Init minimal project and install puppeteer
        run: |
          npm init -y
          npm i puppeteer@22

      # ====== 直接 Node のヒアドキュメントで実行（ファイル生成なし） ======
      - name: Capture (inline node)
        shell: bash
        run: |
          node - <<'NODE'
          import fs from 'node:fs';
          import puppeteer from 'puppeteer';

          const URL  = 'https://kids.yahoo.co.jp/today';
          const OUT  = 'shots/kids-today.png';
          const VIEW = { width: 1920, height: 1080 };

          // まず詳細カード（青枠の塊）を狙う
          const CANDIDATES = [
            '#__next > div > main > div[class^="Today_info__"]',
            'main div[class^="Today_info__"]',
            'main [class^="Today_info__"]',
            'main section'
          ];

          const ensureDirFor = (p) => {
            const d = p.split('/').slice(0, -1).join('/');
            if (d && !fs.existsSync(d)) fs.mkdirSync(d, { recursive: true });
          };

          async function shootBySelectors(page, sels, out) {
            for (const sel of sels) {
              const el = await page.$(sel);
              if (el) {
                await el.screenshot({ path: out });
                console.log('Captured by selector:', sel);
                return true;
              }
            }
            return false;
          }

          (async () => {
            ensureDirFor(OUT);
            const browser = await puppeteer.launch({
              headless: 'new',
              args: ['--no-sandbox','--disable-setuid-sandbox','--lang=ja-JP,ja'],
              defaultViewport: VIEW
            });
            try {
              const page = await browser.newPage();
              await page.setExtraHTTPHeaders({ 'Accept-Language': 'ja-JP,ja;q=0.9' });
              await page.setUserAgent('Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/126.0.0.0 Safari/537.36');

              await page.goto(URL, { waitUntil: 'networkidle2', timeout: 120000 });
              await page.waitForSelector('main', { timeout: 8000 }).catch(() => {});

              // 1) 候補セレクタ群
              let ok = await shootBySelectors(page, CANDIDATES, OUT);

              // 2) ダメなら main をキャプチャ
              if (!ok) {
                const m = await page.$('main');
                if (m) {
                  await m.screenshot({ path: OUT });
                  console.log('Captured by selector: main');
                  ok = true;
                }
              }

              // 3) それでもダメなら全画面
              if (!ok) {
                await page.screenshot({ path: OUT, fullPage: true });
                console.warn('Fallback to full-page capture.');
              }
              console.log('Saved:', OUT);
            } finally {
              await browser.close();
            }
          })();
          NODE

      # 変更があった場合のみ commit & push
      - name: Commit & push if changed
        run: |
          set -e
          git config user.name  "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git add -A
          if git diff --cached --quiet; then
            echo "No changes to commit."
          else
            git commit -m "Update kids-today capture"
            git push origin HEAD:main
          fi
